# nur.py —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏
import streamlit as st
from supabase import create_client, Client
from datetime import datetime
from openai import OpenAI, RateLimitError
import uuid
import time
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
load_dotenv()

SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_KEY")
supabase: Client = create_client(SUPABASE_URL, SUPABASE_KEY)
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

# ====== –ü—Å–∏—Ö–æ–ª–æ–≥—Ç—ã“£ –Ω“±—Å“õ–∞—É—ã ======
PSYCHOLOGY_PROMPT = """
–°–µ–Ω –ï–ù–¢-“ì–∞ –¥–∞–π—ã–Ω–¥–∞–ª–∞—Ç—ã–Ω –æ“õ—É—à—ã–ª–∞—Ä“ì–∞ “õ–æ–ª–¥–∞—É –∫”©—Ä—Å–µ—Ç–µ—Ç—ñ–Ω –¥–æ—Å—Ç—ã“õ –ø—Å–∏—Ö–æ–ª–æ–≥-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—Å—ã“£.
–ñ–∞—É–∞–ø—Ç–∞—Ä—ã“£ —Ç“Ø—Å—ñ–Ω—ñ–∫—Ç—ñ, –∂–∞–Ω–∞—à—ã—Ä –∂”ô–Ω–µ –ø—Ä–∞–∫—Ç–∏–∫–∞–ª—ã“õ –∫–µ“£–µ—Å—Ç–µ—Ä –±–µ—Ä–µ—Ç—ñ–Ω –±–æ–ª—É—ã –∫–µ—Ä–µ–∫.
–û“õ—É—à—ã–Ω—ã“£ –∂–∞“ì–¥–∞–π—ã–Ω –º“±“õ–∏—è—Ç —Ç–∞–ª–¥–∞–ø, –æ“ì–∞–Ω “õ–æ–ª–¥–∞—É –∫”©—Ä—Å–µ—Ç –∂”ô–Ω–µ –Ω–∞“õ—Ç—ã —à–µ—à—ñ–º–¥–µ—Ä “±—Å—ã–Ω.
–ñ–∞—É–∞–ø—Ç–∞—Ä—ã“£ “õ–∞–∑–∞“õ —Ç—ñ–ª—ñ–Ω–¥–µ –±–æ–ª—É—ã –∫–µ—Ä–µ–∫.
–ï–≥–µ—Ä –∞–ª–¥—ã“£“ì—ã —Ö–∞–±–∞—Ä–ª–∞–º–∞–ª–∞—Ä –±–æ–ª—Å–∞, –æ–ª–∞—Ä–¥—ã –µ—Å–∫–µ—Ä—ñ–ø, ”ô“£–≥—ñ–º–µ–Ω—ñ –∂–∞–ª“ì–∞—Å—Ç—ã—Ä.
–ê–ª–¥—ã“£“ì—ã —Ö–∞–±–∞—Ä–ª–∞–º–∞–ª–∞—Ä: {previous_messages}
"""

# ====== –ß–∞—Ç—Ç—ã –±–∞—Å“õ–∞—Ä—É —Ñ—É–Ω–∫—Ü–∏—è–ª–∞—Ä—ã ======
def load_psychology_chat_titles():
    try:
        response = supabase.table("psychology_chats").select("id, title, created_at").execute()
        chats = sorted(response.data, key=lambda x: x["created_at"], reverse=True)
        return chats
    except Exception as e:
        st.error(f"–ß–∞—Ç —Ç–∞—Ä–∏—Ö—ã–Ω –∂“Ø–∫—Ç–µ—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ: {str(e)}")
        return []

def load_psychology_chat(chat_id):
    try:
        response = supabase.table("psychology_chats").select("messages").eq("id", chat_id).execute()
        if response.data:
            return response.data[0]["messages"]
        return []
    except Exception as e:
        st.error(f"–ß–∞—Ç—Ç—ã –∂“Ø–∫—Ç–µ—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ: {str(e)}")
        return []

def save_psychology_chat(chat_id: str, user_id: str, messages: list, title: str):
    try:
        existing = supabase.table("psychology_chats").select("id").eq("id", chat_id).execute()
        if existing.data:
            supabase.table("psychology_chats").update({"messages": messages, "title": title}).eq("id", chat_id).execute()
        else:
            supabase.table("psychology_chats").insert({
                "id": chat_id,
                "user_id": user_id,
                "messages": messages,
                "title": title,
                "created_at": datetime.utcnow().isoformat()
            }).execute()
    except Exception as e:
        st.error(f"–ß–∞—Ç—Ç—ã —Å–∞“õ—Ç–∞—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ: {str(e)}")

def delete_psychology_chat(chat_id):
    try:
        response = supabase.table("psychology_chats").delete().eq("id", chat_id).execute()
        return response.data is not None
    except Exception as e:
        st.error(f"–ß–∞—Ç—Ç—ã –∂–æ—é –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ: {str(e)}")
        return False

def rename_psychology_chat(chat_id, new_name):
    if not new_name:
        return False, "–ñ–∞“£–∞ –∞—Ç–∞—É –±–æ—Å –±–æ–ª–º–∞—É—ã –∫–µ—Ä–µ–∫."
    try:
        response = supabase.table("psychology_chats").select("id").eq("title", new_name).execute()
        if response.data:
            return False, "–ë“±–ª –∞—Ç–∞—É–º–µ–Ω —á–∞—Ç –±–∞—Ä."
        supabase.table("psychology_chats").update({"title": new_name}).eq("id", chat_id).execute()
        return True, new_name
    except Exception as e:
        return False, f"–ß–∞—Ç –∞—Ç–∞—É—ã–Ω ”©–∑–≥–µ—Ä—Ç—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ: {str(e)}"

def create_new_psychology_chat():
    try:
        chat_id = str(uuid.uuid4())
        title = datetime.now().strftime("%H:%M:%S")  # –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ —á–∞—Å:–º–∏–Ω—É—Ç–∞:—Å–µ–∫—É–Ω–¥–∞ –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
        return chat_id, title
    except Exception as e:
        st.error(f"–ñ–∞“£–∞ —á–∞—Ç “õ“±—Ä—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ: {str(e)}")
        return None, None

# ====== CSS ======
# CSS = """
# <style>
#     .stApp {
#         background-color: #000000;
#         color: #ffffff;
#         max-width: 1200px;
#         margin: 0 auto;
#         font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
#     }
#     .css-1d391kg {
#         background-color: #1a1a1a !important;
#         border-right: 1px solid #444 !important;
#         padding: 1rem;
#     }
#     [data-testid="stSidebar"] {
#         width: 300px !important;
#         background-color: #1a1a1a !important;
#     }
#     .chat-history-item {
#         background-color: #00cc00 !important;
#         border: 1px solid #00b300 !important;
#         color: #ffffff !important;
#         padding: 10px;
#         margin: 5px 0;
#         border-radius: 8px;
#         cursor: pointer;
#         display: flex;
#         justify-content: space-between;
#         align-items: center;
#         transition: background-color 0.2s;
#     }
#     .chat-history-item:hover {
#         background-color: #00b300 !important;
#     }
#     .chat-history-item.active {
#         background-color: #00b300 !important;
#         border-color: #00a300 !important;
#     }
#     .chat-action-btn {
#         background: none;
#         border: none;
#         cursor: pointer;
#         padding: 5px;
#         color: #ccc !important;
#         font-size: 14px;
#     }
#     .chat-action-btn:hover {
#         color: #ffffff !important;
#     }
#     .new-chat-btn {
#         background-color: #00cc00 !important;
#         color: #ffffff !important;
#         border-radius: 8px;
#         padding: 10px;
#         text-align: center;
#         margin-bottom: 10px;
#         cursor: pointer;
#     }
#     .new-chat-btn:hover {
#         background-color: #00b300 !important;
#     }
#     .stChatMessage {
#         border-radius: 10px;
#         padding: 15px;
#         margin: 10px 0;
#         max-width: 80%;
#         background-color: #00cc00 !important;
#         color: #ffffff !important;
#     }
#     .stChatMessage.user {
#         margin-left: auto;
#     }
#     .stChatMessage.assistant {
#         margin-right: auto;
#         background-color: rgba(0, 204, 0, 0.2) !important;
#     }
#     .stChatInput {
#         position: fixed;
#         bottom: 20px;
#         width: calc(100% - 340px);
#         max-width: 800px;
#         left: 50%;
#         transform: translateX(-50%);
#         background-color: #1a1a1a !important;
#         border: 1px solid #444 !important;
#         border-radius: 20px;
#         padding: 10px;
#         color: #ffffff !important;
#     }
#     .stButton > button {
#         background-color: #00cc00 !important;
#         color: #ffffff !important;
#         border-radius: 8px;
#     }
#     .stButton > button:hover {
#         background-color: #00b300 !important;
#     }
#     .stTextInput > div > input {
#         background-color: #1a1a1a !important;
#         color: #ffffff !important;
#         border: 1px solid #444 !important;
#     }
#     .header-container {
#         display: flex;
#         justify-content: space-between;
#         align-items: center;
#         margin-bottom: 20px;
#     }
#     .header-container h1 {
#         margin: 0;
#         color: #ffffff !important;
#         background-color: #00cc00 !important;
#         padding: 5px 10px;
#         border-radius: 5px;
#     }
# </style>
# """

def psychology_page():
    # ====== –°–µ—Å—Å–∏—è –∫“Ø–π—ñ–Ω –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è–ª–∞—É ======
    if "action_state" not in st.session_state:
        st.session_state.action_state = {"action": None, "chat_id": None}
    if "psychology_chat_id" not in st.session_state:
        chat_id, title = create_new_psychology_chat()
        if chat_id is None:
            st.error("–ñ–∞“£–∞ —á–∞—Ç “õ“±—Ä—É –º“Ø–º–∫—ñ–Ω –±–æ–ª–º–∞–¥—ã. Supabase-—Ç–µ 'psychology_chats' —Ç–∞–±–ª–∏—Ü–∞—Å—ã –±–∞—Ä –µ–∫–µ–Ω—ñ–Ω–µ –∫”©–∑ –∂–µ—Ç–∫—ñ–∑—ñ“£—ñ–∑.")
            return
        st.session_state.psychology_chat_id = chat_id
        st.session_state.psychology_chat_title = title
        st.session_state.psychology_messages = []

    st.title("SENI≈É NURY≈É‚ú®")
    # ====== –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å ======
    # st.markdown(unsafe_allow_html=True)
    # st.markdown("""
    # <div class="header-container">
    #     <h1>üß† –ï–ù–¢ –ü—Å–∏—Ö–æ–ª–æ–≥-–ö”©–º–µ–∫—à—ñ—Å—ñ</h1>
    # </div>
    # """, unsafe_allow_html=True)

    # ====== –ë“Ø–π—ñ—Ä–ª—ñ–∫ –ø–∞–Ω–µ–ª—å ======
    with st.sidebar:
        st.markdown(
            "<h2 style='text-align: center; color: #ffffff; background-color: #00cc00; padding: 10px; border-radius: 8px;'>üí¨ –ß–∞—Ç—Ç–∞—Ä</h2>",
            unsafe_allow_html=True)

        # –ñ–∞“£–∞ —á–∞—Ç —Ç“Ø–π–º–µ—Å—ñ
        if st.button("üÜï –ñ–∞“£–∞ —á–∞—Ç", key="new_psychology_chat", help="–ñ–∞“£–∞ —á–∞—Ç –±–∞—Å—Ç–∞—É"):
            chat_id, title = create_new_psychology_chat()
            if chat_id is None:
                st.error("–ñ–∞“£–∞ —á–∞—Ç “õ“±—Ä—É –º“Ø–º–∫—ñ–Ω –±–æ–ª–º–∞–¥—ã. Supabase-—Ç–µ 'psychology_chats' —Ç–∞–±–ª–∏—Ü–∞—Å—ã –±–∞—Ä –µ–∫–µ–Ω—ñ–Ω–µ –∫”©–∑ –∂–µ—Ç–∫—ñ–∑—ñ“£—ñ–∑.")
                return
            st.session_state.psychology_chat_id = chat_id
            st.session_state.psychology_chat_title = title
            st.session_state.psychology_messages = []
            st.session_state.action_state = {"action": None, "chat_id": None}
            st.rerun()

        # –ß–∞—Ç —Ç–∞—Ä–∏—Ö—ã
        chat_files = load_psychology_chat_titles()
        for chat in chat_files:
            chat_id = chat["id"]
            chat_title = chat["title"]
            active = chat_id == st.session_state.get("psychology_chat_id", "")
            css_class = "chat-history-item active" if active else "chat-history-item"

            with st.container():
                col1, col2, col3 = st.columns([3, 1, 1])
                with col1:
                    if st.button(chat_title, key=f"select_psychology_{chat_id}", help="–ß–∞—Ç—Ç—ã –∞—à—É"):
                        st.session_state.psychology_chat_id = chat_id
                        st.session_state.psychology_chat_title = chat_title
                        st.session_state.psychology_messages = load_psychology_chat(chat_id)
                        st.session_state.action_state = {"action": None, "chat_id": None}
                        st.rerun()
                with col2:
                    if st.button("‚úèÔ∏è", key=f"rename_psychology_{chat_id}", help="–ß–∞—Ç –∞—Ç–∞—É—ã–Ω ”©–∑–≥–µ—Ä—Ç—É"):
                        st.session_state.action_state = {"action": "rename", "chat_id": chat_id}
                        st.rerun()
                with col3:
                    if st.button("üóëÔ∏è", key=f"delete_psychology_{chat_id}", help="–ß–∞—Ç—Ç—ã –∂–æ—é"):
                        st.session_state.action_state = {"action": "delete", "chat_id": chat_id}
                        st.rerun()

                # –ê—Ç–∞—É–¥—ã ”©–∑–≥–µ—Ä—Ç—É –Ω–µ–º–µ—Å–µ –∂–æ—é ”ô—Ä–µ–∫–µ—Ç—Ç–µ—Ä—ñ–Ω ”©“£–¥–µ—É
                if st.session_state.action_state["chat_id"] == chat_id:
                    if st.session_state.action_state["action"] == "rename":
                        new_name = st.text_input("–ñ–∞“£–∞ –∞—Ç–∞—É –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑:", key=f"rename_input_psychology_{chat_id}")
                        col_save, col_cancel = st.columns(2)
                        with col_save:
                            if st.button("–°–∞“õ—Ç–∞—É", key=f"save_rename_psychology_{chat_id}"):
                                success, result = rename_psychology_chat(chat_id, new_name)
                                if success:
                                    if chat_id == st.session_state.get("psychology_chat_id", ""):
                                        st.session_state.psychology_chat_title = result
                                    st.session_state.action_state = {"action": None, "chat_id": None}
                                    st.rerun()
                                else:
                                    st.error(result)
                        with col_cancel:
                            if st.button("–ë–æ–ª–¥—ã—Ä–º–∞—É", key=f"cancel_rename_psychology_{chat_id}"):
                                st.session_state.action_state = {"action": None, "chat_id": None}
                                st.rerun()
                    elif st.session_state.action_state["action"] == "delete":
                        st.warning(f"'{chat_title}' —á–∞—Ç—ã–Ω –∂–æ—é–¥—ã —Ä–∞—Å—Ç–∞“£—ã–∑:")
                        col_confirm, col_cancel = st.columns(2)
                        with col_confirm:
                            if st.button("–ò”ô, –∂–æ—é", key=f"confirm_delete_psychology_{chat_id}"):
                                if delete_psychology_chat(chat_id):
                                    if chat_id == st.session_state.get("psychology_chat_id", ""):
                                        chat_id, title = create_new_psychology_chat()
                                        if chat_id is None:
                                            st.error("–ñ–∞“£–∞ —á–∞—Ç “õ“±—Ä—É –º“Ø–º–∫—ñ–Ω –±–æ–ª–º–∞–¥—ã. Supabase-—Ç–µ 'psychology_chats' —Ç–∞–±–ª–∏—Ü–∞—Å—ã –±–∞—Ä –µ–∫–µ–Ω—ñ–Ω–µ –∫”©–∑ –∂–µ—Ç–∫—ñ–∑—ñ“£—ñ–∑.")
                                        return
                                        st.session_state.psychology_chat_id = chat_id
                                        st.session_state.psychology_chat_title = title
                                        st.session_state.psychology_messages = []
                                    st.session_state.action_state = {"action": None, "chat_id": None}
                                    st.rerun()
                                else:
                                    st.error("–ß–∞—Ç—Ç—ã –∂–æ—é –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ —à—ã“õ—Ç—ã.")
                        with col_cancel:
                            if st.button("–ñ–æ“õ", key=f"cancel_delete_psychology_{chat_id}"):
                                st.session_state.action_state = {"action": None, "chat_id": None}
                                st.rerun()

    # ====== –ù–µ–≥—ñ–∑–≥—ñ –º–∞–∑–º“±–Ω ======
    user_id = "anonymous"  # –ë–æ–ª–∞—à–∞“õ—Ç–∞ Supabase –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è—Å—ã–º–µ–Ω –∞—É—ã—Å—Ç—ã—Ä—É“ì–∞ –±–æ–ª–∞–¥—ã

    # –¢–∞“£–¥–∞–ª“ì–∞–Ω —á–∞—Ç—Ç—ã“£ —Ö–∞–±–∞—Ä–ª–∞–º–∞–ª–∞—Ä—ã–Ω –∫”©—Ä—Å–µ—Ç—É
    for msg in st.session_state.psychology_messages:
        with st.chat_message(msg["role"]):
            st.markdown(msg["content"])

    # –ß–∞—Ç –µ–Ω–≥—ñ–∑—É
    user_input = st.chat_input("‚úçÔ∏è –ñ–∞“ì–¥–∞–π–¥—ã —Å–∏–ø–∞—Ç—Ç–∞“£—ã–∑ –Ω–µ–º–µ—Å–µ —Å“±—Ä–∞“õ “õ–æ–π—ã“£—ã–∑...", key="psychology_input")
    if user_input:
        # –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã —Ö–∞–±–∞—Ä–ª–∞–º–∞—Å—ã–Ω “õ–æ—Å—É
        st.session_state.psychology_messages.append({"role": "user", "content": user_input})
        with st.chat_message("user"):
            st.markdown(user_input)

        with st.spinner("–ö–µ“£–µ—Å –¥–∞–π—ã–Ω–¥–∞–ª—É–¥–∞..."):
            max_retries = 5
            retry_delay = 10  # Initial delay in seconds
            for attempt in range(max_retries):
                try:
                    # –ê–ª–¥—ã“£“ì—ã —Ö–∞–±–∞—Ä–ª–∞–º–∞–ª–∞—Ä–¥—ã —à–µ–∫—Ç–µ—É (—Å–æ“£“ì—ã 3 —Ö–∞–±–∞—Ä–ª–∞–º–∞)
                    previous_messages = "\n".join([f"{msg['role']}: {msg['content']}" for msg in st.session_state.psychology_messages[-3:]])
                    prompt = PSYCHOLOGY_PROMPT.format(previous_messages=previous_messages) + f"\n–û“õ—É—à—ã–Ω—ã“£ –∂–∞“ì–¥–∞–π—ã: {user_input}"

                    response = client.chat.completions.create(
                        model="gpt-4o",
                        messages=[
                            {"role": "system", "content": "–°–µ–Ω —Ç”ô–∂—ñ—Ä–∏–±–µ–ª—ñ –ø—Å–∏—Ö–æ–ª–æ–≥—Å—ã“£, –æ“õ—É—à—ã–ª–∞—Ä“ì–∞ –∫–µ“£–µ—Å –±–µ—Ä–µ—Å—ñ“£."},
                            {"role": "user", "content": prompt}
                        ],
                        temperature=0.7
                    )

                    answer = response.choices[0].message.content
                    st.session_state.psychology_messages.append({"role": "assistant", "content": answer})
                    with st.chat_message("assistant"):
                        st.markdown(answer)

                    # –ß–∞—Ç—Ç—ã Supabase-—Ç–µ —Å–∞“õ—Ç–∞—É
                    save_psychology_chat(
                        chat_id=st.session_state.psychology_chat_id,
                        user_id=user_id,
                        messages=st.session_state.psychology_messages,
                        title=st.session_state.psychology_chat_title
                    )
                    break
                except RateLimitError:
                    if attempt < max_retries - 1:
                        time.sleep(retry_delay)
                        retry_delay *= 2  # Exponential backoff
                    else:
                        st.error("“ö–∞—Ç–µ: OpenAI –ª–∏–º–∏—Ç—ñ –∞—Å—ã–ø –∫–µ—Ç—Ç—ñ. 2-3 –º–∏–Ω—É—Ç –∫“Ø—Ç—ñ“£—ñ–∑ –Ω–µ–º–µ—Å–µ OpenAI –µ—Å–µ–ø—Ç—ñ–∫ –∂–∞–∑–±–∞“£—ã–∑–¥—ã —Ç–µ–∫—Å–µ—Ä—ñ“£—ñ–∑: https://platform.openai.com/account/usage")
                        st.session_state.psychology_messages.append({
                            "role": "assistant",
                            "content": "–ö–µ—à—ñ—Ä—ñ“£—ñ–∑, “õ–∞–∑—ñ—Ä –∂–∞—É–∞–ø –±–µ—Ä–µ –∞–ª–º–∞–π–º—ã–Ω. –õ–∏–º–∏—Ç–∫–µ –∂–µ—Ç—Ç—ñ“£—ñ–∑. 2-3 –º–∏–Ω—É—Ç –∫“Ø—Ç—ñ“£—ñ–∑ –Ω–µ–º–µ—Å–µ OpenAI –µ—Å–µ–ø—Ç—ñ–∫ –∂–∞–∑–±–∞“£—ã–∑–¥—ã —Ç–µ–∫—Å–µ—Ä—ñ“£—ñ–∑: https://platform.openai.com/account/usage"
                        })
                        with st.chat_message("assistant"):
                            st.markdown(st.session_state.psychology_messages[-1]["content"])
                        break
                except Exception as e:
                    st.error(f"“ö–∞—Ç–µ: {str(e)}")
                    break
                time.sleep(5)  # Delay to avoid rapid requests